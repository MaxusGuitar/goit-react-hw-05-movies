{"version":3,"file":"static/js/265.288add0d.chunk.js","mappings":"uKACA,MAAyB,uB,SCCZA,EAAO,WAClB,OAAO,gBAAKC,UAAWC,EAAhB,0B,0GCKIC,EAAe,WAC1B,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,UAmCA,OAhCAC,EAAAA,EAAAA,YAAU,WACRF,GAAQ,IAERG,EAAAA,EAAAA,IAAYT,GACTU,MAAK,SAACC,GACL,MAEIA,EADFA,KAAQC,EADV,EACUA,YAAaC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,KAAMC,EADpC,EACoCA,SAAUC,EAD9C,EAC8CA,aAAcC,EAD5D,EAC4DA,OAG5Db,EAAQ,CACNQ,YAAAA,EAEAC,MAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAE,aACoB,IAAlBD,EAAOE,OACH,sBACAF,EAAOG,KAAI,kBAAc,CAAd,EAAGN,SAAmBO,KAAK,WAG/CC,OAAM,SAACf,GACN,OAAOgB,EAAAA,GAAAA,MAAY,sCAEpBC,SAAQ,kBACPC,YAAW,WACTnB,GAAQ,KACP,UAEN,CAACN,IAEG,CAAE0B,MAlCK,mBAkCErB,KAAAA,EAAME,MAAAA,EAAOJ,KAAAA,EAAMG,QAAAA,EAASF,QAAAA,K,0JC7CxCuB,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,IAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAD5D,0GAIA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BsB,GAA3B,iFACQD,IAAAA,IAAA,UAAaH,EAAb,kBAA+BI,EAA/B,qBAAoDH,IAD5D,0GAIA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,iFACQH,IAAAA,IAAA,UACRH,EADQ,iCACyBC,EADzB,kBAC0CK,EAD1C,wCADR,4G,sHCRQ,SAASC,IACtB,OAAqCnC,EAAAA,EAAAA,KAA7BM,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOJ,EAArB,EAAqBA,KAAMuB,EAA3B,EAA2BA,MAE3B,OACE,4BACGrB,IAAQ,SAAC,IAAD,KACT,UAAC,KAAD,CAAM8B,GAAG,IAAT,WACE,SAAC,MAAD,IADF,WAIE5B,IACA,2BACGJ,EAAKS,aACJ,gBACEwB,IAAG,yCAAoCjC,EAAKS,aAC5CyB,IAAI,GACJ,YAAW,WAGb,gBAAKD,IAAKV,EAAOW,IAAI,MAEvB,wBAAKlC,EAAKU,MAAQV,EAAKU,MAAQV,EAAKW,QACpC,wCAAgBX,EAAKa,aAArB,QACA,sCACA,uBAAIb,EAAKY,YACT,oCACA,uBAAIZ,EAAKe","sources":["webpack://goit-react-hw-05-movies/./src/components/Load/Loader.module.scss?6808","components/Load/Load.jsx","hocks/MovieDetails.jsx","servises/getFilm.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__zPD1o\",\"load8\":\"Loader_load8__zjeGD\"};","import style from \"./Loader.module.scss\";\r\n\r\nexport const Load = () => {\r\n  return <div className={style.loader}>Loading...</div>;\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMoveItem } from \"../servises/getFilm\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst noPosterImg =\r\n  \"https://sd.keepcalms.com/i/sorry-no-picture-available-2.png\";\r\n\r\nexport const MovieDetails = () => {\r\n  const { moviesId } = useParams();\r\n  const [item, setItem] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const noImg = \"../img/noimg.png\";\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n\r\n    getMoveItem(moviesId)\r\n      .then((data) => {\r\n        const {\r\n          data: { poster_path, title, name, overview, vote_average, genres },\r\n        } = data;\r\n\r\n        setItem({\r\n          poster_path,\r\n\r\n          title,\r\n          name,\r\n          overview,\r\n          vote_average,\r\n          genresValues:\r\n            genres.length === 0\r\n              ? \"There are no genres\"\r\n              : genres.map(({ name }) => [name]).join(\", \"),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        return toast.error(\"There is no movie on this page!\");\r\n      })\r\n      .finally(() =>\r\n        setTimeout(() => {\r\n          setLoad(false);\r\n        }, 1000)\r\n      );\r\n  }, [moviesId]);\r\n\r\n  return { noImg, load, error, item, setLoad, setItem };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst API_KEY = \"8ae25731f6c7965e1e45ea675a13c63f\";\r\n\r\nexport async function getTrend() {\r\n  return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n}\r\n\r\nexport async function getMoveItem(movie_id) {\r\n  return await axios.get(`${BASE_URL}/movie/${movie_id}y?api_key=${API_KEY}`);\r\n}\r\n\r\nexport async function getMoveItemSearch(search_film) {\r\n  return await axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${search_film}&language=en-US&include_adult=false`\r\n  );\r\n}\r\n\r\n//https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n","import { Link } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { Load } from \"../components/Load/Load\";\r\nimport { MovieDetails } from \"../hocks\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { load, error, item, noImg } = MovieDetails();\r\n\r\n  return (\r\n    <main>\r\n      {load && <Load />}\r\n      <Link to=\"/\">\r\n        <FaArrowLeft />\r\n        Back\r\n      </Link>\r\n      {!error && (\r\n        <div>\r\n          {item.poster_path ? (\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\r\n              alt=\"\"\r\n              min-width={\"100px\"}\r\n            />\r\n          ) : (\r\n            <img src={noImg} alt=\"\" />\r\n          )}\r\n          <h1>{item.title ? item.title : item.name}</h1>\r\n          <p>User Score: {item.vote_average}%</p>\r\n          <h2>Overview</h2>\r\n          <p>{item.overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>{item.genresValues}</p>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"names":["Load","className","style","MovieDetails","moviesId","useParams","useState","item","setItem","load","setLoad","error","useEffect","getMoveItem","then","data","poster_path","title","name","overview","vote_average","genres","genresValues","length","map","join","catch","toast","finally","setTimeout","noImg","BASE_URL","API_KEY","getTrend","axios","movie_id","getMoveItemSearch","search_film","MovieDetailsPage","to","src","alt"],"sourceRoot":""}