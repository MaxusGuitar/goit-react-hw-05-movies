{"version":3,"file":"static/js/194.5030a510.chunk.js","mappings":"uKACA,MAAyB,uB,SCCZA,EAAO,WAClB,OAAO,gBAAKC,UAAWC,EAAhB,0B,yICAM,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YACpC,GAAwCC,EAAAA,EAAAA,UAAS,IAAzCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAmBrB,OACE,iBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEkB,KAAhBJ,GAIJF,EAAYE,GACZC,EAAe,KAJbI,EAAAA,GAAAA,MAAY,kCAQd,UACE,kBACEC,KAAK,OACLC,YAAY,gBACZC,MAAOR,EACPS,SAvBe,SAACN,GACpB,IAAMO,EAAIP,EAAEQ,cAAcH,MAAMI,cAEhCX,EAAeS,Q,cCMJ,SAASG,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBjB,EAAAA,EAAAA,UAAS,IAAjC,eAAOkB,EAAP,KAAaC,EAAb,KACA,GAAwBnB,EAAAA,EAAAA,WAAS,GAAjC,eAAOoB,EAAP,KAAaC,EAAb,KACA,GAA0BrB,EAAAA,EAAAA,UAAS,MAAnC,eAAcsB,GAAd,WACMC,EAAiBP,EAAaQ,IAAI,eAClCC,GAAWC,EAAAA,EAAAA,MAqCjB,OA/BAC,EAAAA,EAAAA,YAAU,WACe,KAAnBJ,GAIAA,IACFF,GAAQ,IAERO,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAACC,GACL,IACUC,EACND,EADFA,KAAQC,QAEV,GAAuB,IAAnBA,EAAQC,OACV,OAAO1B,EAAAA,GAAAA,MACL,sDAGJa,EAAQY,MAETE,OAAM,SAACC,GACNZ,EAASY,MAEVC,SAAQ,WACPC,YAAW,WACTf,GAAQ,KACP,WAGR,CAACE,KAGF,4BACE,SAACzB,EAAD,CAAaC,YArCE,SAACmB,GAClBD,EAAgB,CAAEoB,YAAanB,OAqC5BE,IAAQ,SAACzB,EAAA,EAAD,KACT,wBACGuB,EAAKoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMnB,GAAlC,SACGe,GAAgBC,KAFZF","sources":["webpack://goit-react-hw-05-movies/./src/components/Load/Loader.module.scss?6808","components/Load/Load.jsx","components/Search/MovieSearch.jsx","views/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__zPD1o\",\"load8\":\"Loader_load8__zjeGD\"};","import style from \"./Loader.module.scss\";\r\n\r\nexport const Load = () => {\r\n  return <div className={style.loader}>Loading...</div>;\r\n};\r\n","import { useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function MovieSearch({ submitValue }) {\r\n  const { searchValue, setSearchValue } = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const v = e.currentTarget.value.toLowerCase();\r\n\r\n    setSearchValue(v);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchValue === \"\") {\r\n      toast.error(\"Please, enter the movie name!\");\r\n      return;\r\n    }\r\n    submitValue(searchValue);\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search movies\"\r\n        value={searchValue}\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import {\r\n  NavLink,\r\n  Outlet,\r\n  useLocation,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n//import { MovieDetails } from \"../hocks\";\r\nimport { getMoveItemSearch } from \"../servises/getFilm\";\r\nimport MovieSearch from \"../components/Search/MovieSearch\";\r\nimport { Load } from \"../components/Load/Load\";\r\n//import style from \"./Navigation.module.scss\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function Movie() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [item, setItem] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const currentItemPos = searchParams.get(\"search_film\");\r\n  const location = useLocation();\r\n\r\n  const find_movie = (item) => {\r\n    setSearchParams({ search_film: item });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentItemPos === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (currentItemPos) {\r\n      setLoad(true);\r\n\r\n      getMoveItemSearch(currentItemPos)\r\n        .then((data) => {\r\n          const {\r\n            data: { results },\r\n          } = data;\r\n          if (results.length === 0) {\r\n            return toast.error(\r\n              \"Sorry, there are no movies. Try another request...\"\r\n            );\r\n          }\r\n          setItem(results);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        })\r\n        .finally(() => {\r\n          setTimeout(() => {\r\n            setLoad(false);\r\n          }, 1000);\r\n        });\r\n    }\r\n  }, [currentItemPos]);\r\n\r\n  return (\r\n    <div>\r\n      <MovieSearch submitValue={find_movie} />\r\n      {load && <Load />}\r\n      <ul>\r\n        {item.map(({ id, title, name }) => (\r\n          <li key={id}>\r\n            <Link to={`${id}`} state={{ from: location }}>\r\n              {title ? title : name}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Load","className","style","MovieSearch","submitValue","useState","searchValue","setSearchValue","onSubmit","e","preventDefault","toast","type","placeholder","value","onChange","v","currentTarget","toLowerCase","Movie","useSearchParams","searchParams","setSearchParams","item","setItem","load","setLoad","setError","currentItemPos","get","location","useLocation","useEffect","getMoveItemSearch","then","data","results","length","catch","error","finally","setTimeout","search_film","map","id","title","name","to","state","from"],"sourceRoot":""}